#
# Copyright (C) 2016-2017 Lightbend Inc. <https://www.lightbend.com>
#
play.modules.enabled += com.rccl.cp.ive.api.impl.VacationItineraryServiceModule
play.modules.enabled += com.rccl.cp.ive.api.impl.ConfigurationServiceLocatorModule

#lagom.persistence.ask-timeout=10s

################ THESE ARE ADDITIONAL AFTER THE HELLO POC #############
lagom.broker.kafka {
  # The URLs of the Kafka brokers. Separate each URL with a comma.
  brokers = ${lagom.broker.defaults.kafka.brokers}

  client {
    default {
      # Exponential backoff for failures
      failure-exponential-backoff {
        # minimum (initial) duration until processor is started again
        # after failure
        min = 3s

        # the exponential back-off is capped to this duration
        max = 30s

        # additional random delay is based on this factor
        random-factor = 0.2
      }
    }

    # configuration used by the Lagom Kafka producer
    producer = ${lagom.broker.kafka.client.default}
    producer.role = ""

    # configuration used by the Lagom Kafka consumer
    consumer {
      failure-exponential-backoff = ${lagom.broker.kafka.client.default.failure-exponential-backoff}

      # Number of messages batched together by the consumer before the related messages'
      # offsets are committed to Kafka.
      # By increasing the batching-size you are trading speed with the risk of having
      # to re-process a larger number of messages if a failure occurs.
      # The value provided must be strictly greater than zero.
      batching-size = 20

      # Interval of time waited by the consumer before the currently batched messages'
      # offsets are committed to Kafka.
      # This parameter is useful to ensure that messages' offsets are always committed
      # within a fixed amount of time.
      # The value provided must be strictly greater than zero.
      batching-interval = 5 seconds
    }
  }
}

########## Settings for container ##############
http.port= 9001
http.port= ${?HTTP_PORT}

cassandra.default {
 	## list the contact points here
	cas_contact_point_one = "127.0.0.1"
	cas_contact_point_one = ${?CAS_CONTACT_POINT_ONE}
	# Comma-separated list of contact points in the Cassandra cluster
	contact-points = [${cassandra.default.cas_contact_point_one}, ${?CAS_CONTACT_POINT_TWO}, ${?CAS_CONTACT_POINT_THREE}]
	
	# Port of contact points in the Cassandra cluster
    port = 4000
    port = ${?CAS_CONTACT_POINTS_PORT}
    
 	## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
 	session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

lagom.persistence {
   	ask-timeout=10s
	read-side.cassandra {
		contact-points = ${cassandra.default.contact-points}
	    session-provider = ${cassandra.default.session-provider}
		port = ${cassandra.default.port}

        authentication.username = "cassandra"
        authentication.username = ${?CASSANDRA_USERNAME}
        authentication.password = "cassandra"
        authentication.password = ${?CASSANDRA_PASSWORD}
   }
}

cassandra-journal {
	contact-points = ${cassandra.default.contact-points}
	session-provider = ${cassandra.default.session-provider}
	port = ${cassandra.default.port}
   	authentication {
       	username = "cassandra"
       	username = ${?CASSANDRA_USERNAME}
       	password = "cassandra"
       	password = ${?CASSANDRA_PASSWORD}
   	}
}

cassandra-query-journal {
   	eventual-consistency-delay = 0s
}

cassandra-snapshot-store {
	contact-points = ${cassandra.default.contact-points}
	session-provider = ${cassandra.default.session-provider}
	port = ${cassandra.default.port}
  	authentication {
    	username = "cassandra"
       	username = ${?CASSANDRA_USERNAME}
       	password = "cassandra"
       	password = ${?CASSANDRA_PASSWORD}
   	}
}

akka {
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        port = 2552
        port = ${?AKKA_PORT}
      }
    }
}
lagom.broker.kafka.brokers="tcp://localhost:9092"
lagom.broker.kafka.brokers=${?KAFKA_URL}